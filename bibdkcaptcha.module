<?php

/**
 * @file
 * Extending the CAPTCHA module with dansih language audio support.
 */

/**
 * Implements hook_help().
 */
function bibdkcaptcha_help($path, $arg) {
  $output = '';
  switch ($path) {
    case 'admin/modules#name':
      $output .= t('Bibdk Captcha');
      break;
    case 'admin/modules#description':
    case 'admin/user/captcha/bibdkcaptcha':
      break;
    case 'admin/help#bibdkcaptcha':
      break;
  }
  return $output;
}

/**
 * Implements hook_menu().
 */
function bibdkcaptcha_menu() {
  $items = array();
  $items['admin/config/people/captcha/bibdkcaptcha'] = array(
    'title' => 'bibdkcaptcha',
    'description' => 'Administer the reCAPTCHA web service.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('recaptcha_admin_settings'),
    'access arguments' => array('administer recaptcha'),
    'type' => MENU_LOCAL_TASK
  );

  $items['user/create_login/refreshcatptcha'] = array(
    'page callback' => 'bibdkcaptcha_callback_refresh',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  
  $items['user/create_login/playaudiocaptcha'] = array(
    'page callback' => 'bibdkcaptcha_play_audio_file',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  return $items;
}

/**
 * Implementation of hook_captcha().
 * 
 */
function bibdkcaptcha_captcha($op, $captcha_type = '', $sid = NULL) {
  drupal_add_js(drupal_get_path('module', 'bibdkcaptcha') . '/bibdkcaptcha.js');
  switch ($op) {
    case 'list':
      return array('Bibdk Captcha');
    case 'generate':
      if ($captcha_type == 'Bibdk Captcha') {
        $captcha = image_captcha_captcha($op, 'Image', $sid);
        $markup = '<div id="captcha">' . _append_buttons($captcha['form']['captcha_image']['#markup']);
        $captcha['form']['captcha_image']['#markup'] = $markup;
        #generateSoundFile($captcha['solution']);
        return $captcha;
      }
      break;
    case 'refresh':
      module_load_include('inc', 'captcha');
      $captcha_sid = _captcha_generate_captcha_session('user_register_form');
      $captcha = image_captcha_captcha('generate', 'Image', $captcha_sid);
      _bibdkcaptcha_update_captcha_session($captcha_sid, $captcha['solution']);
      #generateSoundFile($captcha['solution']);
      return $captcha['form']['captcha_image']['#markup'];
      break;
  }
}

/**
 * Helper function for updating the solution in the CAPTCHA session table.
 *
 * @param $captcha_sid the CAPTCHA session ID to update.
 * @param $solution the new solution to associate with the given CAPTCHA session.
 */
function _bibdkcaptcha_update_captcha_session($captcha_sid, $solution) {
  $token = db_query("SELECT solution FROM {captcha_sessions} WHERE csid = '$captcha_sid'")->fetchField();
  db_update('captcha_sessions')
      ->condition('csid', $captcha_sid)
      ->fields(array(
        'token' => $token,
        'timestamp' => REQUEST_TIME,
        'solution' => $solution,
      ))
      ->execute();
}

/**
 * Helper function for appending refresh and audio buttons to image markup
 * @param string $markup
 * @return string 
 */
function _append_buttons($markup) {
  $module_path = base_path() . drupal_get_path('module', 'bibdkcaptcha');
  $refresh_btn = $module_path . '/graphics/refresh.gif';
  $audio_btn = $module_path . '/graphics/audio_icon.gif';
  $markup = $markup . '<br/><img id="refreshbtn" src="' . $refresh_btn . '"/>
    <img id="audiobtn" src="' . $audio_btn . '"/></div>';
  return $markup;
}

/**
 * Callback function. Requests a new captcha image and returns it to jQuery that updates the DOM
 */
function bibdkcaptcha_callback_refresh() {
  $data = bibdkcaptcha_captcha('refresh');
  drupal_json_output($data);
}

function bibdkcaptcha_play_audio_file(){
  
}

function bibdkcaptcha_generate_audio_file(){
  
}